import React, { useState } from 'react';

const FAQ = () => {
  const [activeCategory, setActiveCategory] = useState('general');
  const [searchTerm, setSearchTerm] = useState('');
  const [expandedItems, setExpandedItems] = useState({});

  const categories = [
    { id: 'general', name: 'C√¢u h·ªèi chung', icon: '‚ùì' },
    { id: 'account', name: 'T√†i kho·∫£n', icon: 'üë§' },
    { id: 'services', name: 'D·ªãch v·ª• c√¥ng', icon: 'üèõÔ∏è' },
    { id: 'technical', name: 'K·ªπ thu·∫≠t', icon: 'üîß' },
    { id: 'payment', name: 'Thanh to√°n', icon: 'üí≥' }
  ];

  const faqData = {
    general: [
      {
        id: 1,
        question: 'C·ªïng th√¥ng tin n√†y cung c·∫•p nh·ªØng d·ªãch v·ª• g√¨?',
        answer: 'C·ªïng th√¥ng tin cung c·∫•p c√°c d·ªãch v·ª• c√¥ng tr·ª±c tuy·∫øn nh∆∞ ƒëƒÉng k√Ω kinh doanh, khai b√°o thu·∫ø, ƒëƒÉng k√Ω xe, c·∫•p gi·∫•y ph√©p x√¢y d·ª±ng, v√† nhi·ªÅu th·ªß t·ª•c h√†nh ch√≠nh kh√°c.'
      },
      {
        id: 2,
        question: 'Th·ªùi gian ho·∫°t ƒë·ªông c·ªßa h·ªá th·ªëng l√† nh∆∞ th·∫ø n√†o?',
        answer: 'H·ªá th·ªëng ho·∫°t ƒë·ªông 24/7, b·∫°n c√≥ th·ªÉ truy c·∫≠p v√† s·ª≠ d·ª•ng d·ªãch v·ª• b·∫•t k·ª≥ l√∫c n√†o. Tuy nhi√™n, m·ªôt s·ªë d·ªãch v·ª• c√≥ th·ªÉ ƒë∆∞·ª£c x·ª≠ l√Ω trong gi·ªù h√†nh ch√≠nh.'
      }
    ],
    account: [
      {
        id: 3,
        question: 'L√†m th·∫ø n√†o ƒë·ªÉ t·∫°o t√†i kho·∫£n?',
        answer: 'B·∫°n c√≥ th·ªÉ t·∫°o t√†i kho·∫£n b·∫±ng c√°ch click "ƒêƒÉng k√Ω" tr√™n trang ch·ªß, sau ƒë√≥ ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin c√° nh√¢n v√† x√°c th·ª±c qua email ho·∫∑c SMS.'
      },
      {
        id: 4,
        question: 'T√¥i qu√™n m·∫≠t kh·∫©u, ph·∫£i l√†m sao?',
        answer: 'S·ª≠ d·ª•ng ch·ª©c nƒÉng "Qu√™n m·∫≠t kh·∫©u" tr√™n trang ƒëƒÉng nh·∫≠p. Nh·∫≠p email ho·∫∑c s·ªë ƒëi·ªán tho·∫°i ƒë√£ ƒëƒÉng k√Ω, h·ªá th·ªëng s·∫Ω g·ª≠i link ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u.'
      }
    ],
    services: [
      {
        id: 5,
        question: 'Th·ªùi gian x·ª≠ l√Ω h·ªì s∆° l√† bao l√¢u?',
        answer: 'Th·ªùi gian x·ª≠ l√Ω t√πy thu·ªôc v√†o t·ª´ng lo·∫°i h·ªì s∆°: ƒêƒÉng k√Ω kinh doanh (3-5 ng√†y), ƒêƒÉng k√Ω xe (2-3 ng√†y), C·∫•p ph√©p x√¢y d·ª±ng (15-20 ng√†y).'
      }
    ],
    technical: [
      {
        id: 6,
        question: 'T·∫°i sao t√¥i kh√¥ng th·ªÉ ƒëƒÉng nh·∫≠p?',
        answer: 'Ki·ªÉm tra l·∫°i t√™n ƒëƒÉng nh·∫≠p v√† m·∫≠t kh·∫©u. ƒê·∫£m b·∫£o Caps Lock ƒë√£ t·∫Øt v√† kh√¥ng c√≥ d·∫•u c√°ch th·ª´a. N·∫øu v·∫´n kh√¥ng ƒë∆∞·ª£c, th·ª≠ x√≥a cache tr√¨nh duy·ªát.'
      }
    ],
    payment: [
      {
        id: 7,
        question: 'C√≥ nh·ªØng h√¨nh th·ª©c thanh to√°n n√†o?',
        answer: 'H·ªó tr·ª£ thanh to√°n qua th·∫ª ATM/Visa/MasterCard, v√≠ ƒëi·ªán t·ª≠ (MoMo, ZaloPay, VNPay), chuy·ªÉn kho·∫£n ng√¢n h√†ng, ho·∫∑c thanh to√°n tr·ª±c ti·∫øp t·∫°i c∆° quan.'
      }
    ]
  };

  const toggleExpand = (id) => {
    setExpandedItems(prev => ({
      ...prev,
      [id]: !prev[id]
    }));
  };

  const filteredFAQs = faqData[activeCategory].filter(faq =>
    faq.question.toLowerCase().includes(searchTerm.toLowerCase()) ||
    faq.answer.toLowerCase().includes(searchTerm.toLowerCase())
  );

  return (
    <div className="bg-gray-50 min-h-screen">
      {/* Header */}
      <div className="bg-white shadow-sm">
        <div className="container mx-auto px-4 py-8">
          <h1 className="text-3xl font-bold text-gray-800">C√¢u H·ªèi Th∆∞·ªùng G·∫∑p</h1>
          <p className="text-gray-600 mt-2">T√¨m c√¢u tr·∫£ l·ªùi nhanh ch√≥ng cho c√°c th·∫Øc m·∫Øc c·ªßa b·∫°n</p>
        </div>
      </div>

      <div className="container mx-auto px-4 py-8">
        {/* Search */}
        <div className="bg-white rounded-lg shadow-md p-6 mb-8">
          <div className="relative max-w-2xl mx-auto">
            <input
              type="text"
              placeholder="T√¨m ki·∫øm c√¢u h·ªèi..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="w-full px-4 py-3 pl-12 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
            <span className="absolute left-4 top-3 text-gray-400 text-xl">üîç</span>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-4 gap-8">
          {/* Categories */}
          <div className="lg:col-span-1">
            <div className="bg-white rounded-lg shadow-md p-6 sticky top-4">
              <h3 className="text-lg font-semibold mb-4">Danh M·ª•c</h3>
              <div className="space-y-2">
                {categories.map(category => (
                  <button
                    key={category.id}
                    onClick={() => setActiveCategory(category.id)}
                    className={`w-full text-left px-4 py-3 rounded-lg transition duration-300 flex items-center space-x-3 ${
                      activeCategory === category.id
                        ? 'bg-blue-600 text-white'
                        : 'text-gray-600 hover:bg-blue-50 hover:text-blue-600'
                    }`}
                  >
                    <span className="text-lg">{category.icon}</span>
                    <span className="text-sm font-medium">{category.name}</span>
                  </button>
                ))}
              </div>
            </div>
          </div>

          {/* FAQ Content */}
          <div className="lg:col-span-3">
            <div className="bg-white rounded-lg shadow-md">
              <div className="p-6 border-b border-gray-200">
                <h2 className="text-xl font-semibold">
                  {categories.find(cat => cat.id === activeCategory)?.name}
                </h2>
                <p className="text-gray-600 text-sm mt-1">
                  {filteredFAQs.length} c√¢u h·ªèi
                </p>
              </div>

              <div className="divide-y divide-gray-200">
                {filteredFAQs.map(faq => (
                  <div key={faq.id} className="p-6">
                    <button
                      onClick={() => toggleExpand(faq.id)}
                      className="w-full text-left flex items-center justify-between group"
                    >
                      <h3 className="text-lg font-semibold text-gray-800 group-hover:text-blue-600 transition duration-300">
                        {faq.question}
                      </h3>
                      <span className={`text-2xl transition duration-300 ${
                        expandedItems[faq.id] ? 'rotate-180' : ''
                      }`}>
                        ‚åÑ
                      </span>
                    </button>
                    
                    {expandedItems[faq.id] && (
                      <div className="mt-4 text-gray-600 leading-relaxed">
                        {faq.answer}
                      </div>
                    )}
                  </div>
                ))}
              </div>

              {filteredFAQs.length === 0 && (
                <div className="p-12 text-center">
                  <span className="text-4xl mb-4 block">üîç</span>
                  <h3 className="text-lg font-semibold text-gray-800 mb-2">
                    Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£
                  </h3>
                  <p className="text-gray-600">
                    Th·ª≠ t√¨m ki·∫øm v·ªõi t·ª´ kh√≥a kh√°c ho·∫∑c ch·ªçn danh m·ª•c kh√°c
                  </p>
                </div>
              )}
            </div>
          </div>
        </div>

        {/* Contact Section */}
        <div className="mt-12 bg-blue-50 rounded-lg p-8">
          <div className="text-center">
            <h2 className="text-2xl font-bold mb-4">Kh√¥ng T√¨m Th·∫•y C√¢u Tr·∫£ L·ªùi?</h2>
            <p className="text-gray-600 mb-6">
              Ch√∫ng t√¥i lu√¥n s·∫µn s√†ng h·ªó tr·ª£ b·∫°n qua c√°c k√™nh sau
            </p>
            <div className="flex justify-center space-x-4">
              <button className="bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition duration-300 flex items-center space-x-2">
                <span>üí¨</span>
                <span>Chat tr·ª±c tuy·∫øn</span>
              </button>
              <button className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition duration-300 flex items-center space-x-2">
                <span>üìû</span>
                <span>Hotline: 1900 1234</span>
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default FAQ;
